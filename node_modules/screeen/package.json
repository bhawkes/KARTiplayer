{
  "name": "screeen",
  "version": "0.0.2",
  "description": "utility for osx screenshot img",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha"
  },
  "author": {
    "name": "nbqx"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nbqx/node-screeen.git"
  },
  "homepage": "https://github.com/nbqx/node-screeen",
  "keywords": [
    "mac",
    "screencapture"
  ],
  "license": "MIT",
  "dependencies": {
    "underscore": "~1.5.2",
    "temporary": "0.0.8"
  },
  "devDependencies": {
    "should": "~2.1.1",
    "mocha": "~1.17.0"
  },
  "readme": "## Screeen (OSX ONLY)\n\nutility for osx screenshot img\n\n### Install\n\n    $ npm install screeen\n\n### Usage\n\noption:\n\n* type('png','jpg','tiff','pdf') - default `jpg`\n* data('path' or 'binary') - default `path`\n* mode('interactive','screen','window') - default `interactive`\n* rect(x,y,w,h as array) - default `not set`\n\nignore `opt.mode` option if `option.rect` is set\n\n### Example\n\n``` js\n// with callback\nScreeen.capture({type:'jpg',data:'binary'}, function(err,data){\n  // data is BINARY data\n  if(err) return console.log(err);\n  fs.writeFileSync('test.jpg', data, {encoding:'binary'});\n});\n\n// without callback\nvar w = fs.createWriteStream('test2.jpg');\nScreeen.capture({rect:[0,0,100,100]}).on('captured',function(path){\n  // path is TEMPORARY FILE PATH\n  fs.createReadStream(path).pipe(w);\n});\n\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nbqx/node-screeen/issues"
  },
  "_id": "screeen@0.0.2",
  "_from": "screeen@"
}
